(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S2_V0 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S3_V1 () Bool)
(declare-fun W_S3_V0 () Bool)
(declare-fun W_S3_V3 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun R_B1_V1 () Bool)
(declare-fun R_B1_V0 () Bool)
(declare-fun R_B1_V3 () Bool)
(declare-fun R_B1_V2 () Bool)
(declare-fun DISJ_W_S2_W_S3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V0 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S3_V1 () Bool)
(declare-fun R_S3_V0 () Bool)
(declare-fun R_S3_V3 () Bool)
(declare-fun R_S3_V2 () Bool)
(declare-fun DISJ_W_S2_R_S3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V0 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S2_R_B1 () Bool)
(declare-fun DISJ_W_S3_R_S2 () Bool)
(declare-fun DISJ_W_S3_R_S3 () Bool)
(declare-fun DISJ_W_S3_R_S1 () Bool)
(declare-fun DISJ_W_S3_R_B1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_W_S3 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S3 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun DISJ_W_S1_R_B1 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S3_V2 () Bool)
(declare-fun W_S1_V0 () Bool)
(assert
 (let
 (($x709
   (forall
    ((V2_0 Int) (V3_0 Int) 
     (V0_0 Int) (V1_0 Int) 
     (MW_S1_V2 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V0 Bool) (MW_S1_V1 Bool) 
     (MW_S3_V2 Bool) (MW_S3_V3 Bool) 
     (MW_S3_V0 Bool) (MW_S3_V1 Bool) 
     (MW_S2_V2 Bool) (MW_S2_V3 Bool) 
     (MW_S2_V0 Bool) (MW_S2_V1 Bool) 
     (S3_V3_!51 Int) (S3_V2_!50 Int) 
     (S1_V1_!40 Int) (S1_V1_!48 Int) 
     (S3_V1_!53 Int) (S1_V0_!39 Int) 
     (S1_V0_!47 Int) (S3_V0_!52 Int) 
     (S1_V3_!38 Int) (S1_V3_!46 Int) 
     (S2_V0_!43 Int) (S1_V2_!37 Int) 
     (S1_V2_!45 Int) (B1_!36 Bool) 
     (B1_!49 Bool) (S2_V1_!44 Int) 
     (S2_V2_!41 Int) (S2_V3_!42 Int))
    (let ((?x635 (ite MW_S1_V1 S1_V1_!48 V1_0)))
    (let ((?x636 (ite MW_S3_V1 S3_V1_!53 ?x635)))
    (let ((?x637 (ite MW_S1_V1 S1_V1_!40 V1_0)))
    (let ((?x638 (ite MW_S2_V1 S2_V1_!44 ?x637)))
    (let (($x639 (= ?x638 ?x636)))
    (let ((?x640 (ite MW_S1_V0 S1_V0_!47 V0_0)))
    (let ((?x641 (ite MW_S3_V0 S3_V0_!52 ?x640)))
    (let ((?x642 (ite MW_S1_V0 S1_V0_!39 V0_0)))
    (let ((?x643 (ite MW_S2_V0 S2_V0_!43 ?x642)))
    (let (($x644 (= ?x643 ?x641)))
    (let ((?x645 (ite MW_S1_V3 S1_V3_!46 V3_0)))
    (let ((?x646 (ite MW_S3_V3 S3_V3_!51 ?x645)))
    (let ((?x647 (ite MW_S1_V3 S1_V3_!38 V3_0)))
    (let ((?x648 (ite MW_S2_V3 S2_V3_!42 ?x647)))
    (let (($x649 (= ?x648 ?x646)))
    (let ((?x650 (ite MW_S1_V2 S1_V2_!45 V2_0)))
    (let ((?x651 (ite MW_S3_V2 S3_V2_!50 ?x650)))
    (let ((?x652 (ite MW_S1_V2 S1_V2_!37 V2_0)))
    (let ((?x653 (ite MW_S2_V2 S2_V2_!41 ?x652)))
    (let (($x654 (= ?x653 ?x651)))
    (let (($x655 (and $x654 $x649 $x644 $x639)))
    (let (($x656 (not B1_!49)))
    (let (($x657 (and B1_!36 $x656)))
    (let (($x658 (not $x657)))
    (let (($x662 (not MW_S2_V0)))
    (let (($x663 (or $x662 W_S2_V0)))
    (let (($x664 (not MW_S2_V3)))
    (let (($x665 (or $x664 W_S2_V3)))
    (let (($x666 (not MW_S2_V2)))
    (let (($x667 (or $x666 W_S2_V2)))
    (let (($x668 (not MW_S3_V1)))
    (let (($x669 (or $x668 W_S3_V1)))
    (let (($x670 (not MW_S3_V0)))
    (let (($x671 (or $x670 W_S3_V0)))
    (let (($x672 (not MW_S3_V3)))
    (let (($x673 (or $x672 W_S3_V3)))
    (let (($x676 (not MW_S1_V1)))
    (let (($x677 (or $x676 W_S1_V1)))
    (let (($x680 (not MW_S1_V3)))
    (let (($x681 (or $x680 W_S1_V3)))
    (let (($x682 (not MW_S1_V2)))
    (let (($x683 (or $x682 W_S1_V2)))
    (let (($x686 (= V1_0 ?x635)))
    (let (($x283 (not R_B1_V1)))
    (let (($x687 (or $x283 $x686)))
    (let (($x688 (= V0_0 ?x640)))
    (let (($x281 (not R_B1_V0)))
    (let (($x689 (or $x281 $x688)))
    (let (($x690 (= V3_0 ?x645)))
    (let (($x279 (not R_B1_V3)))
    (let (($x691 (or $x279 $x690)))
    (let (($x692 (= V2_0 ?x650)))
    (let (($x277 (not R_B1_V2)))
    (let (($x693 (or $x277 $x692)))
    (let (($x694 (and $x693 $x691 $x689 $x687)))
    (let (($x695 (not $x694)))
    (let (($x697 (= S1_V2_!37 S1_V2_!45)))
    (let (($x698 (= S1_V3_!38 S1_V3_!46)))
    (let (($x699 (= S1_V0_!47 S1_V0_!39)))
    (let (($x700 (= S1_V1_!40 S1_V1_!48)))
    (let
    (($x706
      (and $x700 $x699 $x698 $x697 
      (or $x695 (= B1_!36 B1_!49)) $x683 $x681 $x677 $x673 $x671 $x669 $x667
      $x665 $x663))) (or (not $x706) $x658 $x655)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 (let (($x150 (and W_S2_V0 W_S3_V0)))
 (let (($x149 (and W_S2_V3 W_S3_V3)))
 (let (($x200 (or W_S2_V2 $x149 $x150 W_S3_V1)))
 (let (($x201 (not $x200)))
 (let (($x202 (= DISJ_W_S2_W_S3 $x201)))
 (let (($x142 (and W_S2_V0 R_S2_V0)))
 (let (($x141 (and W_S2_V3 R_S2_V3)))
 (let (($x140 (and W_S2_V2 R_S2_V2)))
 (let (($x197 (or $x140 $x141 $x142 R_S2_V1)))
 (let (($x198 (not $x197)))
 (let (($x199 (= DISJ_W_S2_R_S2 $x198)))
 (let (($x134 (and W_S2_V0 R_S3_V0)))
 (let (($x133 (and W_S2_V3 R_S3_V3)))
 (let (($x132 (and W_S2_V2 R_S3_V2)))
 (let (($x194 (or $x132 $x133 $x134 R_S3_V1)))
 (let (($x195 (not $x194)))
 (let (($x196 (= DISJ_W_S2_R_S3 $x195)))
 (let (($x126 (and W_S2_V0 R_S1_V0)))
 (let (($x125 (and W_S2_V3 R_S1_V3)))
 (let (($x124 (and W_S2_V2 R_S1_V2)))
 (let (($x191 (or $x124 $x125 $x126 R_S1_V1)))
 (let (($x192 (not $x191)))
 (let (($x193 (= DISJ_W_S2_R_S1 $x192)))
 (let (($x118 (and W_S2_V0 R_B1_V0)))
 (let (($x117 (and W_S2_V3 R_B1_V3)))
 (let (($x116 (and W_S2_V2 R_B1_V2)))
 (let (($x188 (or $x116 $x117 $x118 R_B1_V1)))
 (let (($x189 (not $x188)))
 (let (($x190 (= DISJ_W_S2_R_B1 $x189)))
 (let (($x111 (and W_S3_V1 R_S2_V1)))
 (let (($x110 (and W_S3_V0 R_S2_V0)))
 (let (($x109 (and W_S3_V3 R_S2_V3)))
 (let (($x185 (or R_S2_V2 $x109 $x110 $x111)))
 (let (($x186 (not $x185)))
 (let (($x187 (= DISJ_W_S3_R_S2 $x186)))
 (let (($x103 (and W_S3_V1 R_S3_V1)))
 (let (($x102 (and W_S3_V0 R_S3_V0)))
 (let (($x101 (and W_S3_V3 R_S3_V3)))
 (let (($x182 (or R_S3_V2 $x101 $x102 $x103)))
 (let (($x183 (not $x182)))
 (let (($x184 (= DISJ_W_S3_R_S3 $x183)))
 (let (($x95 (and W_S3_V1 R_S1_V1)))
 (let (($x94 (and W_S3_V0 R_S1_V0)))
 (let (($x93 (and W_S3_V3 R_S1_V3)))
 (let (($x179 (or R_S1_V2 $x93 $x94 $x95)))
 (let (($x180 (not $x179)))
 (let (($x181 (= DISJ_W_S3_R_S1 $x180)))
 (let (($x87 (and W_S3_V1 R_B1_V1)))
 (let (($x86 (and W_S3_V0 R_B1_V0)))
 (let (($x85 (and W_S3_V3 R_B1_V3)))
 (let (($x176 (or R_B1_V2 $x85 $x86 $x87)))
 (let (($x177 (not $x176)))
 (let (($x178 (= DISJ_W_S3_R_B1 $x177)))
 (let (($x76 (and W_S1_V3 W_S2_V3)))
 (let (($x74 (and W_S1_V2 W_S2_V2)))
 (let (($x173 (or $x74 $x76 W_S2_V0 W_S1_V1)))
 (let (($x174 (not $x173)))
 (let (($x175 (= DISJ_W_S1_W_S2 $x174)))
 (let (($x68 (and W_S1_V1 W_S3_V1)))
 (let (($x64 (and W_S1_V3 W_S3_V3)))
 (let (($x170 (or W_S1_V2 $x64 W_S3_V0 $x68)))
 (let (($x171 (not $x170)))
 (let (($x172 (= DISJ_W_S1_W_S3 $x171)))
 (let (($x57 (and W_S1_V1 R_S2_V1)))
 (let (($x53 (and W_S1_V3 R_S2_V3)))
 (let (($x51 (and W_S1_V2 R_S2_V2)))
 (let (($x167 (or $x51 $x53 R_S2_V0 $x57)))
 (let (($x168 (not $x167)))
 (let (($x169 (= DISJ_W_S1_R_S2 $x168)))
 (let (($x45 (and W_S1_V1 R_S3_V1)))
 (let (($x41 (and W_S1_V3 R_S3_V3)))
 (let (($x39 (and W_S1_V2 R_S3_V2)))
 (let (($x164 (or $x39 $x41 R_S3_V0 $x45)))
 (let (($x165 (not $x164)))
 (let (($x166 (= DISJ_W_S1_R_S3 $x165)))
 (let (($x33 (and W_S1_V1 R_S1_V1)))
 (let (($x29 (and W_S1_V3 R_S1_V3)))
 (let (($x27 (and W_S1_V2 R_S1_V2)))
 (let (($x161 (or $x27 $x29 R_S1_V0 $x33)))
 (let (($x162 (not $x161)))
 (let (($x163 (= DISJ_W_S1_R_S1 $x162)))
 (let (($x21 (and W_S1_V1 R_B1_V1)))
 (let (($x16 (and W_S1_V3 R_B1_V3)))
 (let (($x13 (and W_S1_V2 R_B1_V2)))
 (let (($x158 (or $x13 $x16 R_B1_V0 $x21)))
 (let (($x159 (not $x158)))
 (let (($x160 (= DISJ_W_S1_R_B1 $x159)))
 (and W_S1_V0 W_S3_V2 W_S2_V1 $x160 $x163 $x166 $x169 $x172 $x175 $x178 $x181
 $x184 $x187 $x190 $x193 $x196 $x199 $x202 $x709))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not DISJ_W_S1_R_B1))
(check-sat)
(exit)

