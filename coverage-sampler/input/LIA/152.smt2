(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V8 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_E1_V7 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun R_E1_V8 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V7 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V8 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V7 () Bool)
(assert
 (let
 (($x71117
   (forall
    ((V8_0 Int) (V1_0 Int) 
     (V2_0 Int) (V4_0 Int) 
     (V7_0 Int) (MW_S1_V8 Bool) 
     (MW_S1_V1 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V4 Bool) 
     (MW_S1_V7 Bool) (S1_V1_!5808 Int) 
     (S1_V1_!5815 Int) (S1_V3_!5809 Int) 
     (S1_V3_!5816 Int) (S1_V2_!5810 Int) 
     (S1_V2_!5817 Int) (E1_!5806 Int) 
     (E1_!5813 Int) (S1_V8_!5807 Int) 
     (S1_V8_!5814 Int) (S1_V4_!5811 Int) 
     (S1_V4_!5818 Int) (S1_V7_!5812 Int) 
     (S1_V7_!5819 Int))
    (let ((?x71383 (ite MW_S1_V7 S1_V7_!5819 V7_0)))
    (let ((?x70753 (ite MW_S1_V7 S1_V7_!5812 V7_0)))
    (let (($x71511 (= ?x70753 ?x71383)))
    (let ((?x70953 (ite MW_S1_V4 S1_V4_!5818 V4_0)))
    (let ((?x70826 (ite MW_S1_V4 S1_V4_!5811 V4_0)))
    (let (($x71284 (= ?x70826 ?x70953)))
    (let ((?x70998 (ite MW_S1_V2 S1_V2_!5817 V2_0)))
    (let ((?x71154 (ite MW_S1_V2 S1_V2_!5810 V2_0)))
    (let (($x70912 (= ?x71154 ?x70998)))
    (let ((?x71629 (+ (- 1) ?x70953)))
    (let ((?x71261 (ite MW_S1_V3 S1_V3_!5809 E1_!5806)))
    (let (($x71576 (= ?x71261 ?x71629)))
    (let ((?x70978 (ite MW_S1_V1 S1_V1_!5815 V1_0)))
    (let ((?x70905 (ite MW_S1_V1 S1_V1_!5808 V1_0)))
    (let (($x71376 (= ?x70905 ?x70978)))
    (let ((?x71036 (ite MW_S1_V8 S1_V8_!5814 V8_0)))
    (let ((?x71217 (ite MW_S1_V8 S1_V8_!5807 V8_0)))
    (let (($x71105 (= ?x71217 ?x71036)))
    (let (($x71050 (and $x71105 $x71376 $x71576 $x70912 $x71284 $x71511)))
    (let ((?x71032 (+ (- 1) ?x70998)))
    (let (($x71573 (>= ?x70978 ?x71032)))
    (let (($x71160 (>= E1_!5813 ?x71629)))
    (let (($x71175 (<= V4_0 E1_!5813)))
    (let (($x71619 (not $x71175)))
    (let ((?x71014 (+ (- 1) ?x71154)))
    (let (($x70965 (>= ?x70905 ?x71014)))
    (let ((?x71196 (+ (- 1) ?x70826)))
    (let (($x71591 (>= ?x71261 ?x71196)))
    (let (($x71546 (<= V4_0 E1_!5806)))
    (let (($x70705 (not $x71546)))
    (let (($x70804 (<= V2_0 V1_0)))
    (let (($x71386 (not $x70804)))
    (let
    (($x71146 (and $x71386 $x70705 $x71591 $x70965 $x71619 $x71160 $x71573)))
    (let (($x71643 (not $x71146)))
    (let (($x71088 (not MW_S1_V4)))
    (let (($x70777 (or $x71088 W_S1_V4)))
    (let (($x71652 (not MW_S1_V2)))
    (let (($x71053 (or $x71652 W_S1_V2)))
    (let (($x71248 (not MW_S1_V3)))
    (let (($x71216 (or $x71248 W_S1_V3)))
    (let (($x70941 (not MW_S1_V1)))
    (let (($x70810 (or $x70941 W_S1_V1)))
    (let (($x70800 (not MW_S1_V8)))
    (let (($x71321 (or $x70800 W_S1_V8)))
    (let (($x71566 (= S1_V7_!5812 S1_V7_!5819)))
    (let (($x71264 (= E1_!5806 E1_!5813)))
    (let (($x148 (not R_S1_V3)))
    (let (($x70964 (or $x148 $x71264)))
    (let (($x70775 (not $x70964)))
    (let (($x71022 (or $x70775 $x71566)))
    (let (($x70897 (= S1_V4_!5818 S1_V4_!5811)))
    (let (($x71130 (= E1_!5813 E1_!5806)))
    (let (($x71614 (or $x148 $x71130)))
    (let (($x71525 (not $x71614)))
    (let (($x70837 (or $x71525 $x70897)))
    (let (($x71617 (= S1_V8_!5807 S1_V8_!5814)))
    (let (($x70937 (or $x70775 $x71617)))
    (let (($x70963 (= S1_V2_!5817 S1_V2_!5810)))
    (let (($x71508 (or $x71525 $x70963)))
    (let (($x70612 (= S1_V3_!5809 S1_V3_!5816)))
    (let (($x71536 (or $x70775 $x70612)))
    (let (($x70854 (= S1_V1_!5808 S1_V1_!5815)))
    (let (($x71131 (or $x70775 $x70854)))
    (let
    (($x70763
      (and $x71131 $x71536 $x71508 $x71264 $x70937 $x70837 $x71022 $x71321
      $x70810 $x71216 $x71053 $x70777)))
    (let (($x70788 (not $x70763))) (or $x70788 $x71643 $x71050)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 (let (($x38 (and W_S1_V4 R_E1_V4)))
 (let (($x36 (and W_S1_V2 R_E1_V2)))
 (let (($x34 (and W_S1_V3 R_E1_V3)))
 (let (($x32 (and W_S1_V1 R_E1_V1)))
 (let (($x30 (and W_S1_V8 R_E1_V8)))
 (let (($x50 (or $x30 $x32 $x34 $x36 $x38 R_E1_V7)))
 (let (($x51 (not $x50)))
 (let (($x52 (= DISJ_W_S1_R_E1 $x51)))
 (let (($x22 (and W_S1_V4 R_S1_V4)))
 (let (($x19 (and W_S1_V2 R_S1_V2)))
 (let (($x16 (and W_S1_V3 R_S1_V3)))
 (let (($x13 (and W_S1_V1 R_S1_V1)))
 (let (($x10 (and W_S1_V8 R_S1_V8)))
 (let (($x47 (or $x10 $x13 $x16 $x19 $x22 R_S1_V7)))
 (let (($x48 (not $x47)))
 (let (($x49 (= DISJ_W_S1_R_S1 $x48))) (and W_S1_V7 $x49 $x52 $x71117)))))))))))))))))))
(assert
 (let (($x70583 (not W_S1_V4)))
 (let (($x70576 (not W_S1_V3)))
 (let (($x71319 (and $x70576 $x70583))) (not $x71319)))))
(check-sat)
(exit)

