(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let
 (($x1022
   (forall
    ((V4_0 Int) (V5_0 Int) 
     (V2_0 Int) (V3_0 Int) 
     (V1_0 Int) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V3 Bool) (MW_S1_V1 Bool) 
     (MW_S2_V4 Bool) (MW_S2_V5 Bool) 
     (MW_S2_V2 Bool) (MW_S2_V3 Bool) 
     (MW_S2_V1 Bool) (S1_V4_!110 Int) 
     (S2_V4_!115 Int) (S2_V4_!120 Int) 
     (S2_V5_!116 Int) (S2_V5_!121 Int) 
     (S1_V1_!114 Int) (S1_V3_!113 Int) 
     (S1_V2_!112 Int) (S2_V1_!119 Int) 
     (S2_V1_!124 Int) (S2_V2_!117 Int) 
     (S2_V2_!122 Int) (S2_V3_!118 Int) 
     (S2_V3_!123 Int) (S1_V5_!111 Int))
    (let ((?x929 (ite MW_S2_V1 S2_V1_!124 V1_0)))
    (let ((?x930 (+ (- 1) ?x929)))
    (let ((?x931 (ite MW_S1_V1 S1_V1_!114 V1_0)))
    (let ((?x932 (ite MW_S2_V1 S2_V1_!119 ?x931)))
    (let (($x933 (= ?x932 ?x930)))
    (let ((?x934 (ite MW_S2_V3 S2_V3_!123 V3_0)))
    (let ((?x935 (ite MW_S1_V3 S1_V3_!113 V3_0)))
    (let ((?x936 (ite MW_S2_V3 S2_V3_!118 ?x935)))
    (let (($x937 (= ?x936 ?x934)))
    (let ((?x938 (ite MW_S2_V2 S2_V2_!122 V2_0)))
    (let ((?x939 (ite MW_S1_V2 S1_V2_!112 V2_0)))
    (let ((?x940 (ite MW_S2_V2 S2_V2_!117 ?x939)))
    (let (($x941 (= ?x940 ?x938)))
    (let ((?x942 (ite MW_S2_V5 S2_V5_!121 V5_0)))
    (let ((?x943 (ite MW_S1_V5 S1_V5_!111 V5_0)))
    (let ((?x944 (ite MW_S2_V5 S2_V5_!116 ?x943)))
    (let (($x945 (= ?x944 ?x942)))
    (let ((?x946 (ite MW_S2_V4 S2_V4_!120 V4_0)))
    (let ((?x947 (ite MW_S1_V4 S1_V4_!110 V4_0)))
    (let ((?x948 (ite MW_S2_V4 S2_V4_!115 ?x947)))
    (let (($x949 (= ?x948 ?x946)))
    (let (($x950 (and $x949 $x945 $x941 $x937 $x933)))
    (let (($x951 (>= ?x929 ?x938)))
    (let ((?x952 (+ (- 1) ?x940)))
    (let (($x953 (>= ?x932 ?x952)))
    (let (($x954 (<= V2_0 V1_0)))
    (let (($x955 (not $x954)))
    (let (($x956 (and $x955 $x953 $x951)))
    (let (($x957 (not $x956)))
    (let (($x959 (not MW_S2_V1)))
    (let (($x960 (or $x959 W_S2_V1)))
    (let (($x961 (not MW_S2_V3)))
    (let (($x962 (or $x961 W_S2_V3)))
    (let (($x963 (not MW_S2_V2)))
    (let (($x964 (or $x963 W_S2_V2)))
    (let (($x965 (not MW_S2_V5)))
    (let (($x966 (or $x965 W_S2_V5)))
    (let (($x969 (not MW_S1_V1)))
    (let (($x970 (or $x969 W_S1_V1)))
    (let (($x973 (not MW_S1_V2)))
    (let (($x974 (or $x973 W_S1_V2)))
    (let (($x975 (not MW_S1_V5)))
    (let (($x976 (or $x975 W_S1_V5)))
    (let (($x977 (not MW_S1_V4)))
    (let (($x978 (or $x977 W_S1_V4)))
    (let (($x980 (= S2_V3_!118 S2_V3_!123)))
    (let (($x981 (= ?x931 V1_0)))
    (let (($x179 (not R_S2_V1)))
    (let (($x982 (or $x179 $x981)))
    (let (($x983 (= ?x935 V3_0)))
    (let (($x177 (not R_S2_V3)))
    (let (($x984 (or $x177 $x983)))
    (let (($x985 (= ?x939 V2_0)))
    (let (($x175 (not R_S2_V2)))
    (let (($x986 (or $x175 $x985)))
    (let (($x987 (= ?x943 V5_0)))
    (let (($x173 (not R_S2_V5)))
    (let (($x988 (or $x173 $x987)))
    (let (($x989 (= ?x947 V4_0)))
    (let (($x171 (not R_S2_V4)))
    (let (($x990 (or $x171 $x989)))
    (let (($x991 (and $x990 $x988 $x986 $x984 $x982)))
    (let (($x992 (not $x991)))
    (let (($x993 (or $x992 $x980)))
    (let (($x994 (= S2_V2_!117 S2_V2_!122)))
    (let (($x995 (or $x992 $x994)))
    (let (($x996 (= S2_V1_!124 S2_V1_!119)))
    (let (($x997 (= V1_0 ?x931)))
    (let (($x998 (or $x179 $x997)))
    (let (($x999 (= V3_0 ?x935)))
    (let (($x1000 (or $x177 $x999)))
    (let (($x1001 (= V2_0 ?x939)))
    (let (($x1002 (or $x175 $x1001)))
    (let (($x1003 (= V5_0 ?x943)))
    (let (($x1004 (or $x173 $x1003)))
    (let (($x1005 (= V4_0 ?x947)))
    (let (($x1006 (or $x171 $x1005)))
    (let (($x1007 (and $x1006 $x1004 $x1002 $x1000 $x998)))
    (let (($x1008 (not $x1007)))
    (let (($x1009 (or $x1008 $x996)))
    (let (($x1010 (= S2_V5_!116 S2_V5_!121)))
    (let (($x1011 (or $x992 $x1010)))
    (let (($x1012 (= S2_V4_!115 S2_V4_!120)))
    (let (($x1013 (or $x992 $x1012)))
    (let
    (($x1019
      (and $x1013 $x1011 $x1009 $x995 $x993 $x978 $x976 $x974 $x970 $x966
      $x964 $x962 $x960)))
    (let (($x1020 (not $x1019))) (or $x1020 $x957 $x950))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 (let (($x68 (and W_S2_V1 R_S2_V1)))
 (let (($x67 (and W_S2_V3 R_S2_V3)))
 (let (($x66 (and W_S2_V2 R_S2_V2)))
 (let (($x65 (and W_S2_V5 R_S2_V5)))
 (let (($x87 (or R_S2_V4 $x65 $x66 $x67 $x68)))
 (let (($x88 (not $x87)))
 (let (($x89 (= DISJ_W_S2_R_S2 $x88)))
 (let (($x59 (and W_S2_V1 R_S1_V1)))
 (let (($x58 (and W_S2_V3 R_S1_V3)))
 (let (($x57 (and W_S2_V2 R_S1_V2)))
 (let (($x56 (and W_S2_V5 R_S1_V5)))
 (let (($x84 (or R_S1_V4 $x56 $x57 $x58 $x59)))
 (let (($x85 (not $x84)))
 (let (($x86 (= DISJ_W_S2_R_S1 $x85)))
 (let (($x50 (and W_S1_V1 W_S2_V1)))
 (let (($x46 (and W_S1_V2 W_S2_V2)))
 (let (($x44 (and W_S1_V5 W_S2_V5)))
 (let (($x81 (or W_S1_V4 $x44 $x46 W_S2_V3 $x50)))
 (let (($x82 (not $x81)))
 (let (($x83 (= DISJ_W_S1_W_S2 $x82)))
 (let (($x37 (and W_S1_V1 R_S2_V1)))
 (let (($x33 (and W_S1_V2 R_S2_V2)))
 (let (($x31 (and W_S1_V5 R_S2_V5)))
 (let (($x29 (and W_S1_V4 R_S2_V4)))
 (let (($x78 (or $x29 $x31 $x33 R_S2_V3 $x37)))
 (let (($x79 (not $x78)))
 (let (($x80 (= DISJ_W_S1_R_S2 $x79)))
 (let (($x23 (and W_S1_V1 R_S1_V1)))
 (let (($x18 (and W_S1_V2 R_S1_V2)))
 (let (($x15 (and W_S1_V5 R_S1_V5)))
 (let (($x12 (and W_S1_V4 R_S1_V4)))
 (let (($x75 (or $x12 $x15 $x18 R_S1_V3 $x23)))
 (let (($x76 (not $x75)))
 (let (($x77 (= DISJ_W_S1_R_S1 $x76)))
 (and W_S1_V3 W_S2_V4 $x77 $x80 $x83 $x86 $x89 $x1022)))))))))))))))))))))))))))))))))))))
(assert
 (let (($x786 (not W_S2_V1)))
 (let (($x783 (not W_S2_V2)))
 (let (($x1165 (and $x783 $x786))) (not $x1165)))))
(check-sat)
(exit)

