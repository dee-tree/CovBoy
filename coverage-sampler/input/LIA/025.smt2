(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun R_E1_V4 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(assert
 (let
 (($x3307
   (forall
    ((V3_0 Int) (V2_0 Int) 
     (V5_0 Int) (V4_0 Int) 
     (MW_S1_V1 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V5 Bool) 
     (MW_S1_V4 Bool) (MW_S2_V1 Bool) 
     (MW_S2_V3 Bool) (MW_S2_V2 Bool) 
     (MW_S2_V5 Bool) (MW_S2_V4 Bool) 
     (S1_V1_!1516 Int) (S1_V1_!1527 Int) 
     (S1_V1_!1532 Int) (S2_V5_!1524 Int) 
     (S2_V5_!1541 Int) (S1_V3_!1517 Int) 
     (S1_V3_!1528 Int) (S1_V3_!1533 Int) 
     (S1_V2_!1518 Int) (S1_V2_!1529 Int) 
     (S1_V2_!1534 Int) (E1_!1515 Int) 
     (E1_!1526 Int) (E1_!1537 Int) 
     (S2_V4_!1525 Int) (S2_V4_!1542 Int) 
     (S1_V5_!1519 Int) (S1_V5_!1530 Int) 
     (S1_V5_!1535 Int) (S2_V1_!1521 Int) 
     (S2_V1_!1538 Int) (S1_V4_!1520 Int) 
     (S1_V4_!1531 Int) (S1_V4_!1536 Int) 
     (S2_V2_!1523 Int) (S2_V2_!1540 Int) 
     (S2_V3_!1522 Int) (S2_V3_!1539 Int))
    (let
    (($x2832
      (= (ite MW_S2_V4 S2_V4_!1525 (ite MW_S1_V4 S1_V4_!1520 V4_0))
      (ite MW_S2_V4 S2_V4_!1542 (ite MW_S1_V4 S1_V4_!1536 V4_0)))))
    (let
    (($x2640
      (= (ite MW_S2_V5 S2_V5_!1524 (ite MW_S1_V5 S1_V5_!1519 V5_0))
      (ite MW_S2_V5 S2_V5_!1541 (ite MW_S1_V5 S1_V5_!1535 V5_0)))))
    (let ((?x2740 (ite MW_S1_V2 S1_V2_!1534 V2_0)))
    (let ((?x2876 (ite MW_S2_V2 S2_V2_!1540 ?x2740)))
    (let
    ((?x2464 (ite MW_S2_V2 S2_V2_!1523 (ite MW_S1_V2 S1_V2_!1518 V2_0))))
    (let
    (($x2630
      (= (ite MW_S2_V3 S2_V3_!1522 (ite MW_S1_V3 S1_V3_!1517 V3_0))
      (ite MW_S2_V3 S2_V3_!1539 (ite MW_S1_V3 S1_V3_!1533 V3_0)))))
    (let
    (($x3391
      (and
      (= (ite MW_S2_V1 S2_V1_!1521 (ite MW_S1_V1 S1_V1_!1516 E1_!1515))
      (ite MW_S2_V1 S2_V1_!1538 E1_!1537)) $x2630 
      (= ?x2464 ?x2876) $x2640 $x2832)))
    (let
    (($x2873
      (and (not (<= V2_0 E1_!1515))
      (>= (ite MW_S2_V1 S2_V1_!1521 (ite MW_S1_V1 S1_V1_!1516 E1_!1515))
      (+ (- 1) ?x2464)) (not (<= V2_0 E1_!1526))
      (not
      (<= (ite MW_S1_V2 S1_V2_!1529 V2_0)
      (+ 1 (ite MW_S1_V1 S1_V1_!1527 E1_!1526))))
      (>=
      (ite MW_S1_V1 S1_V1_!1532 (+ 1 (ite MW_S1_V1 S1_V1_!1527 E1_!1526)))
      (+ (- 1) ?x2740)) (not (<= ?x2740 E1_!1537))
      (>= (ite MW_S2_V1 S2_V1_!1538 E1_!1537) (+ (- 1) ?x2876)))))
    (let
    (($x3153
      (and
      (or (not R_S2_V1) (= E1_!1537 (ite MW_S1_V1 S1_V1_!1516 E1_!1515)))
      (or (not R_S2_V3)
      (= (ite MW_S1_V3 S1_V3_!1533 V3_0) (ite MW_S1_V3 S1_V3_!1517 V3_0)))
      (or (not R_S2_V2) (= ?x2740 (ite MW_S1_V2 S1_V2_!1518 V2_0)))
      (or (not R_S2_V5)
      (= (ite MW_S1_V5 S1_V5_!1535 V5_0) (ite MW_S1_V5 S1_V5_!1519 V5_0)))
      (or (not R_S2_V4)
      (= (ite MW_S1_V4 S1_V4_!1536 V4_0) (ite MW_S1_V4 S1_V4_!1520 V4_0))))))
    (let (($x3103 (not $x3153)))
    (let (($x210 (not R_S1_V4)))
    (let (($x2565 (or $x210 (= (ite MW_S1_V4 S1_V4_!1531 V4_0) V4_0))))
    (let (($x208 (not R_S1_V5)))
    (let (($x2821 (or $x208 (= (ite MW_S1_V5 S1_V5_!1530 V5_0) V5_0))))
    (let (($x206 (not R_S1_V2)))
    (let (($x2820 (or $x206 (= (ite MW_S1_V2 S1_V2_!1529 V2_0) V2_0))))
    (let (($x204 (not R_S1_V3)))
    (let (($x2654 (or $x204 (= (ite MW_S1_V3 S1_V3_!1528 V3_0) V3_0))))
    (let
    (($x2877
      (and
      (or (not R_S1_V1)
      (= (ite MW_S1_V1 S1_V1_!1527 E1_!1526) (+ (- 1) E1_!1526))) $x2654
      $x2820 $x2821 $x2565)))
    (let (($x2843 (not $x2877)))
    (let
    (($x2918
      (and
      (or (not R_S1_V1)
      (= (ite MW_S1_V1 S1_V1_!1527 E1_!1526) (+ (- 1) E1_!1515))) $x2654
      $x2820 $x2821 $x2565)))
    (let (($x2203 (not $x2918)))
    (let (($x2882 (or $x210 (= V4_0 (ite MW_S1_V4 S1_V4_!1531 V4_0)))))
    (let (($x2709 (or $x208 (= V5_0 (ite MW_S1_V5 S1_V5_!1530 V5_0)))))
    (let (($x2524 (or $x206 (= V2_0 (ite MW_S1_V2 S1_V2_!1529 V2_0)))))
    (let (($x2602 (or $x204 (= V3_0 (ite MW_S1_V3 S1_V3_!1528 V3_0)))))
    (let
    (($x2612
      (and
      (or (not R_S1_V1)
      (= E1_!1526 (+ 1 (ite MW_S1_V1 S1_V1_!1527 E1_!1526)))) $x2602 $x2524
      $x2709 $x2882)))
    (let
    (($x2635
      (and
      (or (not R_S1_V1)
      (= E1_!1515 (+ 1 (ite MW_S1_V1 S1_V1_!1527 E1_!1526)))) $x2602 $x2524
      $x2709 $x2882)))
    (let
    (($x2962
      (and (or (not R_E1_V2) (= ?x2740 V2_0))
      (or (not R_E1_V5) (= (ite MW_S1_V5 S1_V5_!1535 V5_0) V5_0))
      (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!1536 V4_0) V4_0)))))
    (let
    (($x3269
      (and (or (not R_E1_V2) (= V2_0 ?x2740))
      (or (not R_E1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!1535 V5_0)))
      (or (not R_E1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!1536 V4_0))))))
    (let (($x2692 (= E1_!1515 E1_!1526)))
    (let
    (($x2669
      (and (or (not (or (not R_S1_V1) $x2692)) (= S1_V1_!1516 S1_V1_!1527))
      (or (not $x2635) (= S1_V1_!1516 S1_V1_!1532))
      (or $x2843 (= S1_V1_!1532 S1_V1_!1527))
      (or $x3103 (= S2_V5_!1541 S2_V5_!1524))
      (or (not (or (not R_S1_V1) $x2692)) (= S1_V3_!1517 S1_V3_!1528))
      (or $x2203 (= S1_V3_!1533 S1_V3_!1517))
      (or $x2843 (= S1_V3_!1533 S1_V3_!1528))
      (or (not (or (not R_S1_V1) $x2692)) (= S1_V2_!1518 S1_V2_!1529))
      (or $x2203 (= S1_V2_!1534 S1_V2_!1518))
      (or $x2843 (= S1_V2_!1534 S1_V2_!1529)) $x2692
      (or (not $x3269) (= E1_!1515 E1_!1537))
      (or (not $x2962) (= E1_!1537 E1_!1526))
      (or $x3103 (= S2_V4_!1542 S2_V4_!1525))
      (or (not $x2635) (= S1_V5_!1519 S1_V5_!1535))
      (or (not (or (not R_S1_V1) (= E1_!1526 E1_!1515)))
      (= S1_V5_!1530 S1_V5_!1519))
      (or (not $x2612) (= S1_V5_!1530 S1_V5_!1535))
      (or $x3103 (= S2_V1_!1538 S2_V1_!1521))
      (or (not (or (not R_S1_V1) (= E1_!1526 E1_!1515)))
      (= S1_V4_!1531 S1_V4_!1520)) 
      (or $x2203 (= S1_V4_!1536 S1_V4_!1520))
      (or $x2843 (= S1_V4_!1536 S1_V4_!1531))
      (or $x3103 (= S2_V2_!1540 S2_V2_!1523))
      (or $x3103 (= S2_V3_!1539 S2_V3_!1522)) 
      (not MW_S1_V1) (not MW_S1_V2) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V4) W_S1_V4) 
      (or (not MW_S2_V1) W_S2_V1) 
      (or (not MW_S2_V3) W_S2_V3) 
      (or (not MW_S2_V2) W_S2_V2) 
      (or (not MW_S2_V5) W_S2_V5)))) 
    (or (not $x2669) (not $x2873) $x3391))))))))))))))))))))))))))))))))))))
 (let
 (($x3241 (not (or (and W_S2_V2 R_E1_V2) (and W_S2_V5 R_E1_V5) R_E1_V4))))
 (let
 (($x113
   (or (and W_S2_V1 R_S2_V1) 
   (and W_S2_V3 R_S2_V3) (and W_S2_V2 R_S2_V2) 
   (and W_S2_V5 R_S2_V5) R_S2_V4)))
 (let (($x115 (= DISJ_W_S2_R_S2 (not $x113))))
 (let
 (($x110
   (or (and W_S2_V1 R_S1_V1) 
   (and W_S2_V3 R_S1_V3) (and W_S2_V2 R_S1_V2) 
   (and W_S2_V5 R_S1_V5) R_S1_V4)))
 (let (($x112 (= DISJ_W_S2_R_S1 (not $x110))))
 (let
 (($x3387
   (= DISJ_W_S1_W_S2 (not (or W_S2_V3 (and W_S1_V5 W_S2_V5) W_S1_V4)))))
 (let (($x152 (not R_E1_V3)))
 (let
 (($x3040 (not (or R_S2_V3 (and W_S1_V5 R_S2_V5) (and W_S1_V4 R_S2_V4)))))
 (let
 (($x2739 (not (or R_S1_V3 (and W_S1_V5 R_S1_V5) (and W_S1_V4 R_S1_V4)))))
 (let (($x2209 (not W_S1_V2)))
 (let (($x2206 (not W_S1_V1)))
 (let (($x150 (not R_E1_V1)))
 (and DISJ_W_S1_R_E1 $x150 $x2206 $x2209 W_S1_V3 W_S2_V4
 (= DISJ_W_S1_R_S1 $x2739) 
 (= DISJ_W_S1_R_S2 $x3040) $x152 $x3387 $x112 $x115 
 (= DISJ_W_S2_R_E1 $x3241) $x3307 
 (not (and W_S1_V5 R_E1_V5)) 
 (not (and W_S1_V4 R_E1_V4)))))))))))))))))
(assert (not (and (not W_S2_V2) DISJ_W_S2_R_S1 DISJ_W_S1_R_S1)))
(assert
 (let (($x2259 (not W_S2_V2)))
 (let (($x2253 (not W_S2_V1)))
 (let (($x3338 (and $x2253 $x2259))) (not $x3338)))))
(check-sat)
(exit)

