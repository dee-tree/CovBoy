(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun R_B1_V4 () Bool)
(declare-fun R_B1_V5 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun R_B1_V2 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_B1_V3 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_B1 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_B1_V1 () Bool)
(declare-fun DISJ_W_S2_R_B1 () Bool)
(assert
 (let (($x197 (not R_B1_V4)))
 (let
 (($x2118
   (forall
    ((V1_0 Int) (V3_0 Int) 
     (V2_0 Int) (V5_0 Int) 
     (V4_0 Int) (MW_S1_V1 Bool) 
     (MW_S1_V3 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V4 Bool) 
     (MW_S2_V1 Bool) (MW_S2_V3 Bool) 
     (MW_S2_V2 Bool) (MW_S2_V5 Bool) 
     (MW_S2_V4 Bool) (S1_V1_!1026 Int) 
     (S1_V1_!1038 Int) (S1_V1_!1043 Int) 
     (B1_!1025 Bool) (B1_!1031 Bool) 
     (B1_!1037 Bool) (S2_V5_!1035 Int) 
     (S1_V3_!1027 Int) (S1_V3_!1039 Int) 
     (S1_V3_!1044 Int) (S1_V2_!1028 Int) 
     (S1_V2_!1040 Int) (S1_V2_!1045 Int) 
     (S2_V4_!1036 Int) (S1_V5_!1029 Int) 
     (S1_V5_!1041 Int) (S1_V5_!1046 Int) 
     (S2_V1_!1032 Int) (S1_V4_!1030 Int) 
     (S1_V4_!1042 Int) (S1_V4_!1047 Int) 
     (S2_V2_!1034 Int) (S2_V3_!1033 Int))
    (let
    (($x2413
      (= (ite MW_S2_V1 S2_V1_!1032 (+ 1 (ite MW_S1_V1 S1_V1_!1026 V1_0)))
      (ite MW_S1_V1 S1_V1_!1043 (+ 1 (ite MW_S1_V1 S1_V1_!1038 V1_0))))))
    (let
    (($x2414
      (and $x2413
      (= (ite MW_S2_V3 S2_V3_!1033 (ite MW_S1_V3 S1_V3_!1027 V3_0))
      (ite MW_S1_V3 S1_V3_!1044 V3_0))
      (= (ite MW_S2_V2 S2_V2_!1034 (ite MW_S1_V2 S1_V2_!1028 V2_0))
      (ite MW_S1_V2 S1_V2_!1045 V2_0))
      (= (ite MW_S2_V5 S2_V5_!1035 (ite MW_S1_V5 S1_V5_!1029 V5_0))
      (ite MW_S1_V5 S1_V5_!1046 V5_0))
      (= (ite MW_S2_V4 S2_V4_!1036 (ite MW_S1_V4 S1_V4_!1030 V4_0))
      (ite MW_S1_V4 S1_V4_!1047 V4_0)))))
    (let
    (($x2389
      (>= (ite MW_S1_V1 S1_V1_!1043 (+ 1 (ite MW_S1_V1 S1_V1_!1038 V1_0)))
      (+ (- 1) (ite MW_S1_V2 S1_V2_!1045 V2_0)))))
    (let
    (($x2396
      (>= (ite MW_S2_V1 S2_V1_!1032 (+ 1 (ite MW_S1_V1 S1_V1_!1026 V1_0)))
      (+ (- 1) (ite MW_S2_V2 S2_V2_!1034 (ite MW_S1_V2 S1_V2_!1028 V2_0))))))
    (let
    (($x2373
      (and (not (<= V2_0 V1_0)) B1_!1025
      (not
      (<= (ite MW_S1_V2 S1_V2_!1028 V2_0)
      (+ 1 (ite MW_S1_V1 S1_V1_!1026 V1_0)))) 
      (not B1_!1031) $x2396 B1_!1037
      (not
      (<= (ite MW_S1_V2 S1_V2_!1040 V2_0)
      (+ 1 (ite MW_S1_V1 S1_V1_!1038 V1_0)))) $x2389)))
    (let
    (($x2069
      (and
      (or (not R_S1_V1) (= (ite MW_S1_V1 S1_V1_!1038 V1_0) (+ (- 1) V1_0)))
      (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!1039 V3_0) V3_0))
      (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!1040 V2_0) V2_0))
      (or (not R_S1_V5) (= (ite MW_S1_V5 S1_V5_!1041 V5_0) V5_0))
      (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!1042 V4_0) V4_0)))))
    (let (($x1945 (not $x2069)))
    (let
    (($x2157
      (and (or (not R_S1_V1) (= V1_0 (+ 1 (ite MW_S1_V1 S1_V1_!1038 V1_0))))
      (or (not R_S1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!1039 V3_0)))
      (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!1040 V2_0)))
      (or (not R_S1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!1041 V5_0)))
      (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!1042 V4_0))))))
    (let
    (($x1928
      (and (or (not R_B1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!1027 V3_0)))
      (or (not R_B1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!1028 V2_0)))
      (or (not R_B1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!1029 V5_0))))))
    (let
    (($x2234
      (and (= S1_V1_!1026 S1_V1_!1038)
      (or $x1945 (= S1_V1_!1043 S1_V1_!1026))
      (or $x1945 (= S1_V1_!1043 S1_V1_!1038))
      (or (not $x1928) (= B1_!1025 B1_!1031)) 
      (= B1_!1037 B1_!1025) 
      (or (not $x1928) (= B1_!1037 B1_!1031)) 
      (= S1_V3_!1027 S1_V3_!1039) 
      (or $x1945 (= S1_V3_!1044 S1_V3_!1027))
      (or $x1945 (= S1_V3_!1044 S1_V3_!1039)) 
      (= S1_V2_!1028 S1_V2_!1040) 
      (or $x1945 (= S1_V2_!1045 S1_V2_!1028))
      (or $x1945 (= S1_V2_!1045 S1_V2_!1040))
      (or (not $x2157) (= S1_V5_!1029 S1_V5_!1046))
      (= S1_V5_!1041 S1_V5_!1029)
      (or (not $x2157) (= S1_V5_!1041 S1_V5_!1046))
      (= S1_V4_!1030 S1_V4_!1042) 
      (or $x1945 (= S1_V4_!1047 S1_V4_!1030))
      (or $x1945 (= S1_V4_!1047 S1_V4_!1042)) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V4) W_S1_V4) 
      (or (not MW_S2_V1) W_S2_V1) 
      (or (not MW_S2_V3) W_S2_V3) 
      (or (not MW_S2_V2) W_S2_V2) 
      (or (not MW_S2_V5) W_S2_V5)))) 
    (or (not $x2234) (not $x2373) $x2414))))))))))))))
 (let
 (($x113
   (or (and W_S2_V1 R_S2_V1) 
   (and W_S2_V3 R_S2_V3) (and W_S2_V2 R_S2_V2) 
   (and W_S2_V5 R_S2_V5) R_S2_V4)))
 (let (($x115 (= DISJ_W_S2_R_S2 (not $x113))))
 (let
 (($x110
   (or (and W_S2_V1 R_S1_V1) 
   (and W_S2_V3 R_S1_V3) (and W_S2_V2 R_S1_V2) 
   (and W_S2_V5 R_S1_V5) R_S1_V4)))
 (let (($x112 (= DISJ_W_S2_R_S1 (not $x110))))
 (let
 (($x107
   (or (and W_S1_V1 W_S2_V1) W_S2_V3 
   (and W_S1_V2 W_S2_V2) (and W_S1_V5 W_S2_V5) W_S1_V4)))
 (let (($x109 (= DISJ_W_S1_W_S2 (not $x107))))
 (let
 (($x1978 (not (or R_B1_V3 (and W_S1_V2 R_B1_V2) (and W_S1_V5 R_B1_V5)))))
 (let
 (($x101
   (or (and W_S1_V1 R_S2_V1) R_S2_V3 
   (and W_S1_V2 R_S2_V2) (and W_S1_V5 R_S2_V5) 
   (and W_S1_V4 R_S2_V4))))
 (let (($x103 (= DISJ_W_S1_R_S2 (not $x101))))
 (let
 (($x98
   (or (and W_S1_V1 R_S1_V1) R_S1_V3 
   (and W_S1_V2 R_S1_V2) (and W_S1_V5 R_S1_V5) 
   (and W_S1_V4 R_S1_V4))))
 (let (($x100 (= DISJ_W_S1_R_S1 (not $x98))))
 (let (($x189 (not R_B1_V1)))
 (and DISJ_W_S2_R_B1 $x189 W_S1_V3 W_S2_V4 $x100 $x103
 (= DISJ_W_S1_R_B1 $x1978) $x109 $x112 $x115 
 (not (and W_S2_V3 R_B1_V3)) $x2118 
 (not (and W_S2_V2 R_B1_V2)) 
 (not (and W_S2_V5 R_B1_V5)) $x197))))))))))))))))
(check-sat)
(exit)

