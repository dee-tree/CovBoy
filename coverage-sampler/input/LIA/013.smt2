(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S2_V2 () Bool)
(assert
 (let
 (($x896
   (forall
    ((V4_0 Int) (V5_0 Int) 
     (V2_0 Int) (V3_0 Int) 
     (V1_0 Int) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V3 Bool) (MW_S1_V1 Bool) 
     (MW_S2_V4 Bool) (MW_S2_V5 Bool) 
     (MW_S2_V2 Bool) (MW_S2_V3 Bool) 
     (MW_S2_V1 Bool) (S1_V4_!400 Int) 
     (S1_V4_!415 Int) (S2_V4_!405 Int) 
     (S2_V4_!410 Int) (S2_V5_!406 Int) 
     (S2_V5_!411 Int) (S1_V1_!404 Int) 
     (S1_V1_!419 Int) (S1_V3_!403 Int) 
     (S1_V3_!418 Int) (S1_V2_!402 Int) 
     (S1_V2_!417 Int) (S2_V1_!409 Int) 
     (S2_V1_!414 Int) (S2_V2_!407 Int) 
     (S2_V2_!412 Int) (S2_V3_!408 Int) 
     (S2_V3_!413 Int) (S1_V5_!401 Int) 
     (S1_V5_!416 Int))
    (let
    (($x1155
      (= (ite MW_S2_V1 S2_V1_!409 (ite MW_S1_V1 S1_V1_!404 V1_0))
      (ite MW_S1_V1 S1_V1_!419 (ite MW_S2_V1 S2_V1_!414 V1_0)))))
    (let
    (($x920
      (= (ite MW_S2_V3 S2_V3_!408 (ite MW_S1_V3 S1_V3_!403 V3_0))
      (ite MW_S1_V3 S1_V3_!418 (ite MW_S2_V3 S2_V3_!413 V3_0)))))
    (let
    (($x846
      (= (ite MW_S2_V2 S2_V2_!407 (ite MW_S1_V2 S1_V2_!402 V2_0))
      (ite MW_S1_V2 S1_V2_!417 (ite MW_S2_V2 S2_V2_!412 V2_0)))))
    (let
    (($x982
      (= (ite MW_S2_V5 S2_V5_!406 (ite MW_S1_V5 S1_V5_!401 V5_0))
      (ite MW_S1_V5 S1_V5_!416 (ite MW_S2_V5 S2_V5_!411 V5_0)))))
    (let
    (($x1012
      (= (ite MW_S2_V4 S2_V4_!405 (ite MW_S1_V4 S1_V4_!400 V4_0))
      (ite MW_S1_V4 S1_V4_!415 (ite MW_S2_V4 S2_V4_!410 V4_0)))))
    (let
    (($x918
      (>= (ite MW_S1_V1 S1_V1_!419 (ite MW_S2_V1 S2_V1_!414 V1_0))
      (+ (- 1) (ite MW_S1_V2 S1_V2_!417 (ite MW_S2_V2 S2_V2_!412 V2_0))))))
    (let
    (($x1006
      (>= (ite MW_S2_V1 S2_V1_!409 (ite MW_S1_V1 S1_V1_!404 V1_0))
      (+ (- 1) (ite MW_S2_V2 S2_V2_!407 (ite MW_S1_V2 S1_V2_!402 V2_0))))))
    (let
    (($x1001
      (and (not (<= V2_0 V1_0)) $x1006
      (not
      (<= (ite MW_S2_V2 S2_V2_!412 V2_0) (ite MW_S2_V1 S2_V1_!414 V1_0)))
      $x918)))
    (let
    (($x961
      (and (or (not R_S1_V4) (= (ite MW_S2_V4 S2_V4_!410 V4_0) V4_0))
      (or (not R_S1_V5) (= (ite MW_S2_V5 S2_V5_!411 V5_0) V5_0))
      (or (not R_S1_V2) (= (ite MW_S2_V2 S2_V2_!412 V2_0) V2_0))
      (or (not R_S1_V3) (= (ite MW_S2_V3 S2_V3_!413 V3_0) V3_0))
      (or (not R_S1_V1) (= (ite MW_S2_V1 S2_V1_!414 V1_0) V1_0)))))
    (let (($x962 (not $x961)))
    (let
    (($x938
      (and (or (not R_S2_V4) (= (ite MW_S1_V4 S1_V4_!400 V4_0) V4_0))
      (or (not R_S2_V5) (= (ite MW_S1_V5 S1_V5_!401 V5_0) V5_0))
      (or (not R_S2_V2) (= (ite MW_S1_V2 S1_V2_!402 V2_0) V2_0))
      (or (not R_S2_V3) (= (ite MW_S1_V3 S1_V3_!403 V3_0) V3_0))
      (or (not R_S2_V1) (= (ite MW_S1_V1 S1_V1_!404 V1_0) V1_0)))))
    (let (($x951 (not $x938)))
    (let
    (($x1184
      (and (or (not R_S2_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!400 V4_0)))
      (or (not R_S2_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!401 V5_0)))
      (or (not R_S2_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!402 V2_0)))
      (or (not R_S2_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!403 V3_0)))
      (or (not R_S2_V1) (= V1_0 (ite MW_S1_V1 S1_V1_!404 V1_0))))))
    (let
    (($x1298
      (and (or $x962 (= S1_V4_!415 S1_V4_!400))
      (or (not $x1184) (= S2_V4_!410 S2_V4_!405))
      (or $x951 (= S2_V5_!406 S2_V5_!411))
      (or $x962 (= S1_V1_!419 S1_V1_!404))
      (or $x962 (= S1_V3_!418 S1_V3_!403))
      (or $x962 (= S1_V2_!417 S1_V2_!402))
      (or $x951 (= S2_V1_!409 S2_V1_!414))
      (or $x951 (= S2_V2_!407 S2_V2_!412))
      (or $x951 (= S2_V3_!408 S2_V3_!413))
      (or $x962 (= S1_V5_!416 S1_V5_!401)) 
      (or (not MW_S1_V4) W_S1_V4) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S2_V5) W_S2_V5) 
      (not MW_S2_V2) (or (not MW_S2_V3) W_S2_V3) 
      (not MW_S2_V1))))
    (or (not $x1298) (not $x1001) (and $x1012 $x982 $x846 $x920 $x1155)))))))))))))))))))
 (let
 (($x1377 (not (or R_S2_V4 (and W_S2_V5 R_S2_V5) (and W_S2_V3 R_S2_V3)))))
 (let
 (($x1073 (not (or R_S1_V4 (and W_S2_V5 R_S1_V5) (and W_S2_V3 R_S1_V3)))))
 (let
 (($x1041
   (= DISJ_W_S1_W_S2 (not (or W_S1_V4 (and W_S1_V5 W_S2_V5) W_S2_V3)))))
 (let
 (($x78
   (or (and W_S1_V4 R_S2_V4) 
   (and W_S1_V5 R_S2_V5) (and W_S1_V2 R_S2_V2) R_S2_V3 
   (and W_S1_V1 R_S2_V1))))
 (let (($x80 (= DISJ_W_S1_R_S2 (not $x78))))
 (let
 (($x75
   (or (and W_S1_V4 R_S1_V4) 
   (and W_S1_V5 R_S1_V5) (and W_S1_V2 R_S1_V2) R_S1_V3 
   (and W_S1_V1 R_S1_V1))))
 (let (($x77 (= DISJ_W_S1_R_S1 (not $x75))))
 (let (($x786 (not W_S2_V1)))
 (let (($x783 (not W_S2_V2)))
 (and $x783 $x786 W_S1_V3 W_S2_V4 $x77 $x80 $x1041 
 (= DISJ_W_S2_R_S1 $x1073) 
 (= DISJ_W_S2_R_S2 $x1377) $x896))))))))))))
(check-sat)
(exit)

