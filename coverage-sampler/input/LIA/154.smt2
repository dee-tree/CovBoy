(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V6 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V6 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V5 () Bool)
(assert
 (let
 (($x18341
   (forall
    ((V1_0 Int) (V2_0 Int) 
     (V5_0 Int) (V6_0 Int) 
     (V4_0 Int) (MW_S1_V1 Bool) 
     (MW_S1_V2 Bool) (MW_S1_V5 Bool) 
     (MW_S1_V6 Bool) (S1_V1_!1392 Int) 
     (S1_V1_!1396 Int) (S1_V1_!1400 Int) 
     (S1_V2_!1393 Int) (S1_V2_!1397 Int) 
     (S1_V2_!1401 Int) (S1_V5_!1394 Int) 
     (S1_V5_!1398 Int) (S1_V5_!1402 Int) 
     (S1_V6_!1395 Int) (S1_V6_!1399 Int) 
     (S1_V6_!1403 Int))
    (let ((?x19278 (ite MW_S1_V6 S1_V6_!1403 V6_0)))
    (let ((?x19279 (ite MW_S1_V6 S1_V6_!1395 V6_0)))
    (let (($x19277 (= ?x19279 ?x19278)))
    (let ((?x19281 (ite MW_S1_V5 S1_V5_!1402 V5_0)))
    (let ((?x19282 (ite MW_S1_V5 S1_V5_!1394 V5_0)))
    (let (($x19280 (= ?x19282 ?x19281)))
    (let ((?x19292 (ite MW_S1_V2 S1_V2_!1401 V2_0)))
    (let ((?x19313 (ite MW_S1_V2 S1_V2_!1393 V2_0)))
    (let (($x19283 (= ?x19313 ?x19292)))
    (let ((?x19310 (+ V1_0 V4_0)))
    (let ((?x19293 (ite MW_S1_V1 S1_V1_!1400 ?x19310)))
    (let ((?x19314 (ite MW_S1_V1 S1_V1_!1392 V1_0)))
    (let (($x19284 (= ?x19314 ?x19293)))
    (let (($x19276 (and $x19284 $x19283 $x19280 $x19277)))
    (let ((?x18282 (* 2 V4_0)))
    (let ((?x19298 (+ V1_0 ?x18282)))
    (let (($x19287 (>= ?x19298 ?x19292)))
    (let (($x19291 (<= ?x19298 ?x19292)))
    (let ((?x19290 (ite $x19291 ?x19298 ?x19292)))
    (let ((?x19289 (+ (- 1) ?x19290)))
    (let (($x19288 (>= ?x19293 ?x19289)))
    (let ((?x18595 (ite MW_S1_V2 S1_V2_!1397 V2_0)))
    (let (($x19297 (<= ?x19298 ?x18595)))
    (let ((?x19296 (ite $x19297 ?x19298 ?x18595)))
    (let (($x19295 (<= ?x19296 ?x19310)))
    (let (($x19294 (not $x19295)))
    (let (($x19300 (<= ?x18595 ?x19310)))
    (let (($x19299 (not $x19300)))
    (let (($x19304 (<= ?x19310 ?x18595)))
    (let ((?x19303 (ite $x19304 ?x19310 ?x18595)))
    (let ((?x19302 (+ (- 1) ?x19303)))
    (let ((?x19305 (ite MW_S1_V1 S1_V1_!1396 V1_0)))
    (let (($x19301 (>= ?x19305 ?x19302)))
    (let (($x19309 (<= ?x19310 V2_0)))
    (let ((?x19308 (ite $x19309 ?x19310 V2_0)))
    (let (($x19307 (<= ?x19308 V1_0)))
    (let (($x19306 (not $x19307)))
    (let ((?x19312 (+ (- 1) ?x19313)))
    (let (($x19311 (>= ?x19314 ?x19312)))
    (let (($x19316 (<= V2_0 V1_0)))
    (let (($x19315 (not $x19316)))
    (let
    (($x19286
      (and $x19315 $x19311 $x19306 $x19301 $x19299 $x19294 $x19288 $x19287)))
    (let (($x19285 (not $x19286)))
    (let (($x19349 (not MW_S1_V6)))
    (let (($x18471 (or $x19349 W_S1_V6)))
    (let (($x18352 (not MW_S1_V2)))
    (let (($x18667 (or $x18352 W_S1_V2)))
    (let (($x18466 (not MW_S1_V1)))
    (let (($x18383 (or $x18466 W_S1_V1)))
    (let (($x18278 (= S1_V6_!1399 S1_V6_!1403)))
    (let ((?x19339 (ite MW_S1_V6 S1_V6_!1399 V6_0)))
    (let (($x19338 (= V6_0 ?x19339)))
    (let (($x82 (not R_S1_V6)))
    (let (($x19337 (or $x82 $x19338)))
    (let ((?x17729 (ite MW_S1_V5 S1_V5_!1398 V5_0)))
    (let (($x18615 (= V5_0 ?x17729)))
    (let (($x80 (not R_S1_V5)))
    (let (($x19340 (or $x80 $x18615)))
    (let (($x17849 (= V2_0 ?x18595)))
    (let (($x78 (not R_S1_V2)))
    (let (($x18377 (or $x78 $x17849)))
    (let (($x18418 (= 0 V4_0)))
    (let (($x76 (not R_S1_V1)))
    (let (($x18328 (or $x76 $x18418)))
    (let (($x19336 (and $x18328 $x18377 $x19340 $x19337)))
    (let (($x19335 (not $x19336)))
    (let (($x19319 (or $x19335 $x18278)))
    (let (($x18295 (= S1_V6_!1399 S1_V6_!1395)))
    (let (($x19234 (= S1_V6_!1395 S1_V6_!1403)))
    (let (($x19320 (or $x19335 $x19234)))
    (let (($x19247 (= S1_V5_!1398 S1_V5_!1402)))
    (let (($x19321 (or $x19335 $x19247)))
    (let (($x18435 (= S1_V5_!1394 S1_V5_!1402)))
    (let (($x19322 (or $x19335 $x18435)))
    (let (($x19215 (= S1_V5_!1394 S1_V5_!1398)))
    (let (($x17871 (= S1_V2_!1401 S1_V2_!1397)))
    (let (($x19328 (= ?x19339 V6_0)))
    (let (($x19327 (or $x82 $x19328)))
    (let (($x19330 (= ?x17729 V5_0)))
    (let (($x19329 (or $x80 $x19330)))
    (let (($x19332 (= ?x18595 V2_0)))
    (let (($x19331 (or $x78 $x19332)))
    (let (($x18653 (= V4_0 0)))
    (let (($x18465 (or $x76 $x18653)))
    (let (($x19326 (and $x18465 $x19331 $x19329 $x19327)))
    (let (($x19325 (not $x19326)))
    (let (($x19323 (or $x19325 $x17871)))
    (let (($x19343 (= S1_V2_!1401 S1_V2_!1393)))
    (let (($x19324 (or $x19325 $x19343)))
    (let (($x17704 (= S1_V2_!1393 S1_V2_!1397)))
    (let (($x18689 (= S1_V1_!1396 S1_V1_!1400)))
    (let (($x19333 (or $x19335 $x18689)))
    (let (($x18423 (= S1_V1_!1392 S1_V1_!1400)))
    (let (($x19334 (or $x19335 $x18423)))
    (let (($x17667 (= S1_V1_!1392 S1_V1_!1396)))
    (let
    (($x17630
      (and $x17667 $x19334 $x19333 $x17704 $x19324 $x19323 $x19215 $x19322
      $x19321 $x19320 $x18295 $x19319 $x18383 $x18667 $x18471)))
    (let (($x19341 (not $x17630))) (or $x19341 $x19285 $x19276)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 (let (($x18 (and W_S1_V6 R_S1_V6)))
 (let (($x13 (and W_S1_V2 R_S1_V2)))
 (let (($x10 (and W_S1_V1 R_S1_V1)))
 (let (($x25 (or $x10 $x13 R_S1_V5 $x18)))
 (let (($x26 (not $x25)))
 (let (($x27 (= DISJ_W_S1_R_S1 $x26))) (and W_S1_V5 $x27 $x18341)))))))))
(assert (not DISJ_W_S1_R_S1))
(check-sat)
(exit)

