(set-info :smt-lib-version 2.6)
(set-logic LIA)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S2_V0 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S3_V1 () Bool)
(declare-fun W_S3_V0 () Bool)
(declare-fun W_S3_V3 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun R_B1_V1 () Bool)
(declare-fun R_B1_V0 () Bool)
(declare-fun R_B1_V3 () Bool)
(declare-fun R_B1_V2 () Bool)
(declare-fun DISJ_W_S2_W_S3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V0 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S3_V1 () Bool)
(declare-fun R_S3_V0 () Bool)
(declare-fun R_S3_V3 () Bool)
(declare-fun R_S3_V2 () Bool)
(declare-fun DISJ_W_S2_R_S3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V0 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S2_R_B1 () Bool)
(declare-fun DISJ_W_S3_R_S2 () Bool)
(declare-fun DISJ_W_S3_R_S3 () Bool)
(declare-fun DISJ_W_S3_R_S1 () Bool)
(declare-fun DISJ_W_S3_R_B1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_W_S3 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S3 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun DISJ_W_S1_R_B1 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S3_V2 () Bool)
(declare-fun W_S1_V0 () Bool)
(assert
 (let
 (($x709
   (forall
    ((V2_0 Int) (V3_0 Int) 
     (V0_0 Int) (V1_0 Int) 
     (MW_S1_V2 Bool) (MW_S1_V3 Bool) 
     (MW_S1_V0 Bool) (MW_S1_V1 Bool) 
     (MW_S3_V2 Bool) (MW_S3_V3 Bool) 
     (MW_S3_V0 Bool) (MW_S3_V1 Bool) 
     (MW_S2_V2 Bool) (MW_S2_V3 Bool) 
     (MW_S2_V0 Bool) (MW_S2_V1 Bool) 
     (S3_V3_!51 Int) (S3_V2_!50 Int) 
     (S1_V1_!40 Int) (S1_V1_!48 Int) 
     (S3_V1_!53 Int) (S1_V0_!39 Int) 
     (S1_V0_!47 Int) (S3_V0_!52 Int) 
     (S1_V3_!38 Int) (S1_V3_!46 Int) 
     (S2_V0_!43 Int) (S1_V2_!37 Int) 
     (S1_V2_!45 Int) (B1_!36 Bool) 
     (B1_!49 Bool) (S2_V1_!44 Int) 
     (S2_V2_!41 Int) (S2_V3_!42 Int))
    (let
    (($x639
      (= (ite MW_S2_V1 S2_V1_!44 (ite MW_S1_V1 S1_V1_!40 V1_0))
      (ite MW_S3_V1 S3_V1_!53 (ite MW_S1_V1 S1_V1_!48 V1_0)))))
    (let
    (($x644
      (= (ite MW_S2_V0 S2_V0_!43 (ite MW_S1_V0 S1_V0_!39 V0_0))
      (ite MW_S3_V0 S3_V0_!52 (ite MW_S1_V0 S1_V0_!47 V0_0)))))
    (let
    (($x649
      (= (ite MW_S2_V3 S2_V3_!42 (ite MW_S1_V3 S1_V3_!38 V3_0))
      (ite MW_S3_V3 S3_V3_!51 (ite MW_S1_V3 S1_V3_!46 V3_0)))))
    (let
    (($x654
      (= (ite MW_S2_V2 S2_V2_!41 (ite MW_S1_V2 S1_V2_!37 V2_0))
      (ite MW_S3_V2 S3_V2_!50 (ite MW_S1_V2 S1_V2_!45 V2_0)))))
    (let
    (($x694
      (and (or (not R_B1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!45 V2_0)))
      (or (not R_B1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!46 V3_0)))
      (or (not R_B1_V0) (= V0_0 (ite MW_S1_V0 S1_V0_!47 V0_0)))
      (or (not R_B1_V1) (= V1_0 (ite MW_S1_V1 S1_V1_!48 V1_0))))))
    (let
    (($x706
      (and (= S1_V1_!40 S1_V1_!48) 
      (= S1_V0_!47 S1_V0_!39) 
      (= S1_V3_!38 S1_V3_!46) 
      (= S1_V2_!37 S1_V2_!45) 
      (or (not $x694) (= B1_!36 B1_!49)) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V3) W_S1_V3) 
      (or (not MW_S1_V1) W_S1_V1) 
      (or (not MW_S3_V3) W_S3_V3) 
      (or (not MW_S3_V0) W_S3_V0) 
      (or (not MW_S3_V1) W_S3_V1) 
      (or (not MW_S2_V2) W_S2_V2) 
      (or (not MW_S2_V3) W_S2_V3) 
      (or (not MW_S2_V0) W_S2_V0))))
    (or (not $x706) (not (and B1_!36 (not B1_!49)))
    (and $x654 $x649 $x644 $x639)))))))))))
 (let
 (($x200 (or W_S2_V2 (and W_S2_V3 W_S3_V3) (and W_S2_V0 W_S3_V0) W_S3_V1)))
 (let (($x202 (= DISJ_W_S2_W_S3 (not $x200))))
 (let
 (($x197
   (or (and W_S2_V2 R_S2_V2) 
   (and W_S2_V3 R_S2_V3) (and W_S2_V0 R_S2_V0) R_S2_V1)))
 (let (($x199 (= DISJ_W_S2_R_S2 (not $x197))))
 (let
 (($x194
   (or (and W_S2_V2 R_S3_V2) 
   (and W_S2_V3 R_S3_V3) (and W_S2_V0 R_S3_V0) R_S3_V1)))
 (let (($x196 (= DISJ_W_S2_R_S3 (not $x194))))
 (let
 (($x191
   (or (and W_S2_V2 R_S1_V2) 
   (and W_S2_V3 R_S1_V3) (and W_S2_V0 R_S1_V0) R_S1_V1)))
 (let (($x193 (= DISJ_W_S2_R_S1 (not $x191))))
 (let
 (($x188
   (or (and W_S2_V2 R_B1_V2) 
   (and W_S2_V3 R_B1_V3) (and W_S2_V0 R_B1_V0) R_B1_V1)))
 (let (($x190 (= DISJ_W_S2_R_B1 (not $x188))))
 (let
 (($x185
   (or R_S2_V2 (and W_S3_V3 R_S2_V3) 
   (and W_S3_V0 R_S2_V0) (and W_S3_V1 R_S2_V1))))
 (let (($x187 (= DISJ_W_S3_R_S2 (not $x185))))
 (let
 (($x182
   (or R_S3_V2 (and W_S3_V3 R_S3_V3) 
   (and W_S3_V0 R_S3_V0) (and W_S3_V1 R_S3_V1))))
 (let (($x184 (= DISJ_W_S3_R_S3 (not $x182))))
 (let
 (($x179
   (or R_S1_V2 (and W_S3_V3 R_S1_V3) 
   (and W_S3_V0 R_S1_V0) (and W_S3_V1 R_S1_V1))))
 (let (($x181 (= DISJ_W_S3_R_S1 (not $x179))))
 (let
 (($x176
   (or R_B1_V2 (and W_S3_V3 R_B1_V3) 
   (and W_S3_V0 R_B1_V0) (and W_S3_V1 R_B1_V1))))
 (let (($x178 (= DISJ_W_S3_R_B1 (not $x176))))
 (let
 (($x173 (or (and W_S1_V2 W_S2_V2) (and W_S1_V3 W_S2_V3) W_S2_V0 W_S1_V1)))
 (let (($x175 (= DISJ_W_S1_W_S2 (not $x173))))
 (let
 (($x170 (or W_S1_V2 (and W_S1_V3 W_S3_V3) W_S3_V0 (and W_S1_V1 W_S3_V1))))
 (let (($x172 (= DISJ_W_S1_W_S3 (not $x170))))
 (let
 (($x167
   (or (and W_S1_V2 R_S2_V2) 
   (and W_S1_V3 R_S2_V3) R_S2_V0 
   (and W_S1_V1 R_S2_V1))))
 (let (($x169 (= DISJ_W_S1_R_S2 (not $x167))))
 (let
 (($x164
   (or (and W_S1_V2 R_S3_V2) 
   (and W_S1_V3 R_S3_V3) R_S3_V0 
   (and W_S1_V1 R_S3_V1))))
 (let (($x166 (= DISJ_W_S1_R_S3 (not $x164))))
 (let
 (($x161
   (or (and W_S1_V2 R_S1_V2) 
   (and W_S1_V3 R_S1_V3) R_S1_V0 
   (and W_S1_V1 R_S1_V1))))
 (let (($x163 (= DISJ_W_S1_R_S1 (not $x161))))
 (let
 (($x158
   (or (and W_S1_V2 R_B1_V2) 
   (and W_S1_V3 R_B1_V3) R_B1_V0 
   (and W_S1_V1 R_B1_V1))))
 (let (($x160 (= DISJ_W_S1_R_B1 (not $x158))))
 (and W_S1_V0 W_S3_V2 W_S2_V1 $x160 $x163 $x166 $x169 $x172 $x175 $x178 $x181
 $x184 $x187 $x190 $x193 $x196 $x199 $x202 $x709)))))))))))))))))))))))))))))))))
(check-sat)
(exit)

